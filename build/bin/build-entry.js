var Components = require('../components.json')
var fs = require('fs')
var render = require('json-templater/string')
var uppercamelcase = require('uppercamelcase')
var path = require('path')
var endOfLine = require('os').EOL

var OUTPUT_PATH = path.join(__dirname, '../../src/index.ts')
var IMPORT_TEMPLATE = "import {{name}} from './packages/{{package}}';"
var INSTALL_COMPONENT_TEMPLATE = '  {{name}}'
var MAIN_TEMPLATE = `/* Automatically generated by './build/bin/build-entry.js' */
import './styles/index.scss'

{{include}}

const components = [
{{install}},
];

const install = function(Vue:any) {
  components.forEach(component => {
      Vue.component(component.name, component);  
  });

  Vue.prototype.$notice = Notice;
};

/* istanbul ignore if */
if (typeof window !== 'undefined' && (window as any).Vue) {
  install((window as any).Vue);
}

export default install;
`

var ComponentNames = Object.keys(Components)

// 引入 import 的模板
var includeComponentTemplate = []
// 引入 components 数组的模板
var installTemplate = []

ComponentNames.forEach((name) => {
  var componentName = uppercamelcase(name)

  includeComponentTemplate.push(
    render(IMPORT_TEMPLATE, {
      name: componentName,
      package: name
    })
  )

  if (['Notice'].indexOf(componentName) === -1) {
    installTemplate.push(
      render(INSTALL_COMPONENT_TEMPLATE, {
        name: componentName,
        component: name
      })
    )
  }
})

var template = render(MAIN_TEMPLATE, {
  include: includeComponentTemplate.join(endOfLine),
  install: installTemplate.join(',' + endOfLine)
})

fs.writeFileSync(OUTPUT_PATH, template)
console.log('[build entry] DONE:', OUTPUT_PATH)
